package com.top.tankwar.frame;import com.top.tankwar.model.Level;import com.top.tankwar.model.Map;import com.top.tankwar.model.wall.BaseWall;import com.top.tankwar.model.wall.Wall;import javax.swing.*;import java.awt.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.util.List;public class MapPreViewPanel extends JPanel{	/**	 * 	 */	private static final long serialVersionUID = 1L;	int level=1;	private List<Wall> walls= Map.getWalls();//new ArrayList<>();	private BaseWall base;	private Graphics gra;	private int count= Level.getCount();	private MainFrame frame;		public MapPreViewPanel(final MainFrame frame) {		this.frame=frame;		base=new BaseWall(360, 520);				initWalls();						JButton levelReduce=new JButton("上一关");		levelReduce.addActionListener(new ActionListener() {								@Override			public void actionPerformed(ActionEvent arg0) {				// TODO Auto-generated method stub				level--;				if(level==0) {					level=count;				}				initWalls();				repaint();			}		});		JButton levelPlus=new JButton("下一关");		levelPlus.addActionListener(new ActionListener() {			@Override			public void actionPerformed(ActionEvent arg0) {				// TODO Auto-generated method stub				level++;				if(level>count) {					level=1;				}				//System.out.println(level);				initWalls();				repaint();			}		});			JButton back=new JButton("返回");		back.addActionListener(new ActionListener() {						@Override			public void actionPerformed(ActionEvent arg0) {				// TODO Auto-generated method stub				frame.requestFocus();				gotoLoginPanel();			}		});		this.add(back);		this.add(levelReduce);		this.add(levelPlus);	}	private void gotoLoginPanel() {		frame.setPanel(new LoginPanel(frame));	}	@Override	public void paint(Graphics g) {		super.setBackground(Color.BLACK);		super.paint(g);		gra = g;				g.setColor(Color.ORANGE);		g.drawString("当前关卡："+level, 0, 12);		g.drawString("关卡总数："+count, 0, 24);				paintWalls();	}	private void paintWalls() {		for (int i = 0; i < walls.size(); i++) {			Wall w = walls.get(i);			if(w.x>=760) {				w.setAlive(false);			}			if (w.isAlive()) {				gra.drawImage(w.getImage(), w.x, w.y, this);			} else {				walls.remove(i);				i--;			}		}	}	public void initWalls() {		Map.getMap(level);		//walls=map.getWalls();		//walls.addAll(map.getWalls());		walls.add(base);	}	}